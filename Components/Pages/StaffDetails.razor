@page "/staff/{id:int}"
@rendermode InteractiveServer
@using WebApp.Data.Models
@using WebApp.Services
@inject StaffService staffService
@inject ProgrammeService programmeService
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>StaffDetails: @Title</h3>

<EditForm FormName="Record" Model="@record">
    <div>
        <div class="mb-3">
            <label for="CodeInput" class="form-label">Code</label>
            <div class="col-md-4">
                <InputText id="CodeInput" class="form-control" @bind-Value="record.Code" disabled />
            </div>
        </div>
        <div class="mb-3">
            <label for="TitleInput" class="form-label">Title</label>
            <div class="col-md-4">
                <InputText id="TitleInput" class="form-control" @bind-Value="record.Title" disabled />
            </div>
        </div>
        <div class="mb-3">
            <label for="CreditInput" class="form-label">Credits</label>
            <div class="col-md-4">
                <InputNumber id="CreditInput" class="form-control" @bind-Value="record.Credits" disabled />
                
            </div>
        </div>
        <div class="form-group">
            <button class="btn btn-light" @onclick="HandleDirectAdd">Add</button>
            <button class="btn btn-light" @onclick="HandleDirectEdit">Edit</button>
            <button class="btn btn-light" @onclick="HandleCancel">Cancel</button>
        </div>
    </div>
</EditForm>
<h3>Programmes Leaderships</h3>

<table>
    <thead>
        <tr>
            <th>Id</th>
            <th>Code</th>
            <th>Title</th>
            <th>Credits</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var programme in programmes)
        {
            <tr>
                <td>@programme.Id</td>
                <td>@programme.Code</td>
                <td>@programme.Title</td>
                <td>@programme.Credits</td>
                <td><button class="btn btn-primary" @onclick="() => GoToDetailsPage(programme.Id)">View</button></td>
            </tr>
        }
    </tbody>
</table>
@code {

    [Parameter]
    public int Id { get; set; }
    protected string Title;

    [SupplyParameterFromForm]
    Programme record { get; set; } = new Programme();

    private string? currentUrl;

    protected async override Task OnInitializedAsync()
    {
        record = new Programme();

        if (Id != 0)
        {
            Title = "View";
            record = staffService.GetById(Id);
            ApplyFilter();

        }
        else
        {
            HandleDirectAdd();
        }
    }

    public void HandleDirectAdd()
    {
        NavigationManager.NavigateTo("/programme/add");

    }

    public void HandleDirectEdit()
    {
        NavigationManager.NavigateTo("/programme/edit/" + Id);
    }

    public void HandleCancel()
    {
        NavigationManager.NavigateTo("/");
    }
    // -------------Program List code---------------//

    List<Programme>? programmes = new();

    public string searchText;
    
    void ApplyFilter()
    {
        if (string.IsNullOrEmpty(searchText))
        {
            programmes = programmeService.GetList();
        }
        else
        {
            programmes = programmeService.GetFilteredList(searchText);
        }
    }
    void GoToDetailsPage(int id)
    {
        NavigationManager.NavigateTo("/programme/" + id);
    }
}

